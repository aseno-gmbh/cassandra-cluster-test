datastax-java-driver {
  
  basic.load-balancing-policy.class = DefaultLoadBalancingPolicy
  
  advanced.retry-policy {
    class = de.ba.elos.vfbbo.cassandra.config.ConsistencyRetryPolicy
  }
  

  basic.request {
        consistency = EACH_QUORUM
        serial-consistency = SERIAL
        timeout = 10 seconds
  }
  
  basic.session-name = vfbbo-session
  
  advanced.control-connection {
        schema-agreement {
              timeout = 15 seconds
        }
  }
    
  profiles {
        long-query {
            basic.request.timeout = 10 seconds
            basic.request.consistency = LOCAL_QUORUM
        }
  }

  # DataStax Insights monitoring.
  basic.application {
    name = vfbbo
  }
  advanced.request-tracker {
    # The class of the tracker. If it is not qualified, the driver assumes that it resides in the
    # package com.datastax.oss.driver.internal.core.tracker.
    #
    # The driver provides the following implementations out of the box:
    # - NoopRequestTracker: does nothing.
    # - RequestLogger: logs requests (see the parameters below).
    #
    # You can also specify a custom class that implements RequestTracker and has a public
    # constructor with a DriverContext argument.
    class = RequestLogger

    # Parameters for RequestLogger. All of them can be overridden in a profile, and changed at
    # runtime (the new values will be taken into account for requests logged after the change).
    logs {
      # Whether to log successful requests.
      success.enabled = true

      slow {
        # The threshold to classify a successful request as "slow". If this is unset, all successful
        # requests will be considered as normal.
        // threshold = 1 second

        # Whether to log slow requests.
        // enabled = true
      }

      # Whether to log failed requests.
      // error.enabled = true

      # The maximum length of the query string in the log message. If it is longer than that, it
      # will be truncated.
      // max-query-length = 500

      # Whether to log bound values in addition to the query string.
      // show-values = true

      # The maximum length for bound values in the log message. If the formatted representation of a
      # value is longer than that, it will be truncated.
      // max-value-length = 50

      # The maximum number of bound values to log. If a request has more values, the list of values
      # will be truncated.
      // max-values = 50

      # Whether to log stack traces for failed queries. If this is disabled, the log will just
      # include the exception's string representation (generally the class name and message).
      // show-stack-traces = true
    }
  }
}